name: Build

on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'latest/**'
      - 'official/**'
      - versions.json
  workflow_dispatch:

env:
  SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
  SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set matrix
        id: set-matrix
        run: |
          JSON=$(cat ./versions.json)
          echo "matrix=$(jq -cM . <<< ${JSON})" >> $GITHUB_OUTPUT

  image:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        image: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set version outputs
        id: version
        run: |
          if [[ "${{ matrix.image.version }}" =~ ^[0-9a-f]{40}$ ]]; then
            echo "klei-tools=$(echo ${{ matrix.image.version }} | cut -c 1-7)" >> $GITHUB_OUTPUT
          else
            echo "klei-tools=${{ matrix.image.version }}" >> $GITHUB_OUTPUT
          fi
      - name: Send Slack notification
        uses: codedsolar/slack-action@v1
        if: ${{ github.event_name != 'pull_request' }}
        id: slack
        with:
          fields: |
            {STATUS}
            {REF}
            klei-tools version: ${{ steps.version.outputs.klei-tools }}
            ktools version: ${{ matrix.image.ktools }}
          status: in-progress
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Login to GHCR
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Prepare Docker meta for a Debian image
        uses: docker/metadata-action@v4
        id: debian-meta
        with:
          flavor: |
            latest=${{ matrix.image.latest }}
            prefix=${{ matrix.image.official && 'official-' || '' }},onlatest=${{ matrix.image.official || 'false' }}
          images: |
            ${{ github.repository_owner }}/klei-tools
            ghcr.io/${{ github.repository_owner }}/klei-tools
          labels: |
            maintainer=victor@popkov.me
          tags: |
            ${{ !matrix.image.official && format('type=raw,value={0}', matrix.image.version) || '' }}
            type=raw,value=${{ !matrix.image.official && format('{0}-', matrix.image.version) || '' }}ktools-${{ matrix.image.ktools }}
            type=raw,value=${{ !matrix.image.official && format('{0}-', matrix.image.version) || '' }}ktools-${{ matrix.image.ktools }}-debian
            ${{ matrix.image.latest && 'type=raw,value=debian' || '' }}
            ${{ (matrix.image.latest && matrix.image.official) && 'type=raw,prefix=,suffix=,value=official' || '' }}
      - name: Build a Debian image
        uses: docker/build-push-action@v4
        with:
          build-args: |
            DS_KTOOLS_VERSION=${{ matrix.image.ktools }}
            DS_MOD_TOOLS_VERSION=${{ matrix.image.version }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/klei-tools:${{ !matrix.image.official && format('{0}-', matrix.image.version) || 'official-' }}ktools-${{ matrix.image.ktools }}-debian
          cache-to: type=inline
          context: .
          file: ${{ matrix.image.root }}/debian/Dockerfile
          labels: ${{ steps.debian-meta.outputs.labels }}
          platforms: linux/amd64,linux/386
          pull: true
          push: ${{ !env.ACT && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.debian-meta.outputs.tags }}
      - name: Update Slack notification
        uses: codedsolar/slack-action@v1
        if: ${{ github.event_name != 'pull_request' && always() }}
        with:
          fields: |
            {STATUS}
            {REF}
            klei-tools version: ${{ steps.version.outputs.klei-tools }}
            ktools version: ${{ matrix.image.ktools }}
          status: ${{ job.status }}
          timestamp: ${{ steps.slack.outputs.slack-timestamp }}
